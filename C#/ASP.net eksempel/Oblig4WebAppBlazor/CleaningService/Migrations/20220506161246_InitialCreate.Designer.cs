// <auto-generated />
using System;
using CleaningService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CleaningService.Migrations
{
    [DbContext(typeof(Oblig4Context))]
    [Migration("20220506161246_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CleaningService.Models.Oppgave", b =>
                {
                    b.Property<int>("OppgaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OppgaveId"), 1L, 1);

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Work")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OppgaveId");

                    b.HasIndex("RoomNumber");

                    b.ToTable("Oppgaver");
                });

            modelBuilder.Entity("CleaningService.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("endDate");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("startDate");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ReservationId");

                    b.HasIndex(new[] { "RoomNumber" }, "IX_reservations_RoomNumber");

                    b.HasIndex(new[] { "UserName" }, "IX_reservations_UserName");

                    b.ToTable("reservations", (string)null);
                });

            modelBuilder.Entity("CleaningService.Models.Room", b =>
                {
                    b.Property<int>("RoomNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomNumber"), 1L, 1);

                    b.Property<int>("NumberOfBeds")
                        .HasColumnType("int");

                    b.Property<int>("Quality")
                        .HasColumnType("int");

                    b.HasKey("RoomNumber");

                    b.ToTable("rooms", (string)null);
                });

            modelBuilder.Entity("CleaningService.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserName");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("CleaningService.Models.Oppgave", b =>
                {
                    b.HasOne("CleaningService.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomNumber");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("CleaningService.Models.Reservation", b =>
                {
                    b.HasOne("CleaningService.Models.Room", "RoomNumberNavigation")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CleaningService.Models.User", "UserNameNavigation")
                        .WithMany("Reservations")
                        .HasForeignKey("UserName");

                    b.Navigation("RoomNumberNavigation");

                    b.Navigation("UserNameNavigation");
                });

            modelBuilder.Entity("CleaningService.Models.Room", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("CleaningService.Models.User", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
